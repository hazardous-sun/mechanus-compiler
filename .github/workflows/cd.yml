name: ðŸš€ CD

on:
  # Trigger automatically when a new version tag is pushed
  push:
    tags:
      - 'v*.*.*'

  # Allow manual runs from the Actions tab in GitHub
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      # --- Step 1: Check out the repository code ---
      # fetch-depth 0 is required for git-cliff to access the full commit history.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- Step 2: Set up the Go environment ---
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      # --- Step 3: Build and package the binaries ---
      - name: Build and Package Binaries
        run: |
          mkdir release-assets
          echo "Building for Linux..."
          GOOS=linux GOARCH=amd64 go build -o release-assets/mechanus-compiler-linux-amd64 ./cmd/mecha/main.go
          tar -czvf release-assets/mechanus-compiler-linux-amd64.tar.gz -C release-assets mechanus-compiler-linux-amd64
          echo "Building for Windows..."
          GOOS=windows GOARCH=amd64 go build -o release-assets/mechanus-compiler-windows-amd64.exe ./cmd/mecha/main.go
          zip -j release-assets/mechanus-compiler-windows-amd64.zip release-assets/mechanus-compiler-windows-amd64.exe
          echo "Building for macOS (amd64)..."
          GOOS=darwin GOARCH=amd64 go build -o release-assets/mechanus-compiler-darwin-amd64 ./cmd/mecha/main.go
          tar -czvf release-assets/mechanus-compiler-darwin-amd64.tar.gz -C release-assets mechanus-compiler-darwin-amd64

      # --- Step 4: Generate Changelog using Git-Cliff ---
      # This step runs git-cliff to create a changelog for only the latest tag.
      - name: Generate Changelog
        uses: git-cliff/git-cliff-action@v3
        with:
          # Assumes you have a cliff.toml config file in your repo root.
          config: cliff.toml
          # The --latest flag creates a changelog for the most recent tag only.
          # The --strip header removes the main # Changelog title for a cleaner release body.
          args: --latest --strip header --output CHANGELOG.md

      # --- Step 5: Create the GitHub Release ---
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # Use the changelog generated by git-cliff as the body of the release.
          body_path: CHANGELOG.md
          # Upload the packaged binaries as release assets.
          files: |
            release-assets/*.tar.gz
            release-assets/*.zip