name: ðŸš€ CD

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      # --- Step 1: Check out the repository code ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Step 2: Set up the Go environment ---
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      # --- Step 3: Build and package the binaries for multiple platforms ---
      - name: Build and Package Binaries
        run: |
          # Create a directory to store the release assets.
          mkdir release-assets

          # Build for Linux (amd64) and package it.
          echo "Building for Linux..."
          GOOS=linux GOARCH=amd64 go build -o release-assets/mechanus-compiler-linux-amd64 ./cmd/mecha/main.go
          tar -czvf release-assets/mechanus-compiler-linux-amd64.tar.gz -C release-assets mechanus-compiler-linux-amd64

          # Build for Windows (amd64) and package it.
          echo "Building for Windows..."
          GOOS=windows GOARCH=amd64 go build -o release-assets/mechanus-compiler-windows-amd64.exe ./cmd/mecha/main.go
          zip -j release-assets/mechanus-compiler-windows-amd64.zip release-assets/mechanus-compiler-windows-amd64.exe

          # Build for macOS (amd64) and package it.
          echo "Building for macOS (amd64)..."
          GOOS=darwin GOARCH=amd64 go build -o release-assets/mechanus-compiler-darwin-amd64 ./cmd/mecha/main.go
          tar -czvf release-assets/mechanus-compiler-darwin-amd64.tar.gz -C release-assets mechanus-compiler-darwin-amd64

      # --- Step 4: Create the GitHub Release and upload the assets ---
      # This action creates a new release and automatically generates notes from your recent commits.
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # A glob pattern that points to the packaged binaries to be uploaded.
          files: |
            release-assets/*.tar.gz
            release-assets/*.zip
          # This enables the automatic generation of release notes from commit history.
          generate_release_notes: true