{
    {
        Integrate 0

        {
            count := 0
            Send(varString1 + "\n")
            for count <= 100 {
                Send("All hail Mechanus!\n")
            }
        } else {
            Send("varBoolean2 == Active\n")
        } elif varBoolean2 {
            Send("varBoolean1 == Inactive\n")
        } if !varBoolean1

        /*
        Variables declaration use the following structure:


        Variable declaration should be accepted by the following regular expression:
        (((A-Z)|(a-z))+(_|(A-Z)|(a-z)|(0-9))*)+(,( )*(((A-Z)|(a-z))+(_|(A-Z)|(a-z)|(0-9))*)+)*:( )*(Nil|Gear|Tensor|State|Monodrone|Omnidrone)( )*=<expression>

        backup:
        (((A-Z)*(a-z)*)+)(,((A-Z)+|(a-z)+)+)*:( )*(Nil|Gear|Tensor|State|Monodrone|Omnidrone)( )*=
        */

        varString1: Omnidrone := "Hello, World!"
        varChar1: Monodrone := 'a'
        varBoolean1, varBoolean2: State := Active, Inactive
        varFloat1: Tensor := 1.23456
        varInteger1, varInteger2: Gear := 1234, 4321
        varNil: Nil := nil
        // First we shall demonstrate how to allocate variables

    } ()main Architect

} Construct main